@page
@model IndexModel
@{
	ViewData["Title"] = "Home Page";
}
<h3>MEDICAL SYSTEM </h3>
@if (User.FindFirstValue(ClaimTypes.Role) != "MedicalExpert")
{
	<div class="booking-container">
		<a href="/Search/SearchFacility" class="booking-option">
			<img src="~/imgPatient/8e767d6d-f6f2-446d-9c05-1e39daa4c4b2-y_taaoa_taaoai_nhaa_.png" alt="Facility" />
			<span>Search Facility</span>
		</a>
		<a href="/Search/SearchDoctors" class="booking-option">
			<img src="~/imgPatient/a3df420d-e5bb-4c25-9866-40e7e1c8235c-aaaaoat_khaam_ngoaa_i_giaaa.png" alt="Doctor" />

			<span>Search Expert</span>
		</a>
	</div>

}
<div class="container">
	<div class="row">
		<!-- Khu vực bài viết (70%) -->
		<div class="col-md-12">
			<h2>Highlight Article</h2>
			@if (Model.HealthArticles.Count > 0)
			{
				var random = new Random();
				var featuredArticle = Model.HealthArticles.OrderBy(x => random.Next()).FirstOrDefault();
				var otherArticles = Model.HealthArticles
				.OrderBy(x => random.Next())
				.ToList();

				<div class="card mb-4 shadow-sm">
					<div class="card-body">
						<h3 class="card-title">@featuredArticle.Title</h3>
						<p class="card-text">@featuredArticle.Content</p>
						<p class="small text-muted">By @featuredArticle.Author - @featuredArticle.CreatedAt</p>
					
					</div>
				</div>
				<h2>All Articles</h2>
				<div class="row" id="articleContainer">
					@foreach (var article in otherArticles)
					{
						<div class="col-md-6 mb-3 article-item">
							<div class="card shadow-sm">
								<div class="card-body">
									<h5 class="card-title">@article.Title</h5>
									<p class="card-text">@featuredArticle.Content</p>
									<p class="small text-muted">By @article.Author.FullName - @article.CreatedAt</p>
									
								</div>
							</div>
						</div>
					}
				</div>
			}
		
		</div>
		@if (Model.TotalPages > 1)
		{
			<nav>
				<ul class="pagination">
					@for (int i = 1; i <= Model.TotalPages; i++)
					{
						<li class="page-item @(i == Model.CurrentPage ? "active" : "")">
							<a class="page-link" href="?searchTerm=@Model.SearchTerm&pg=@i">@i</a>
						</li>
					}
				</ul>
			</nav>
		}


	</div>
</div>

<style>
	/* Căn giữa nội dung */
	.container {
		text-align: center;
	}

	/* Hiệu ứng button */
	.btn {
		border-radius: 25px;
		transition: all 0.3s ease-in-out;
		font-size: 1rem;
		padding: 10px 20px;
	}

		.btn:hover {
			transform: scale(1.05);
			box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
		}

	/* Bài viết nổi bật */
	.card {
		border-radius: 10px;
		transition: box-shadow 0.3s ease-in-out;
	}

		.card:hover {
			box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
		}

	/* Khoảng cách giữa các bài viết */
	.article-item {
		margin-bottom: 20px;
	}

	/* Căn chỉnh nội dung bài viết */
	.card-body {
		text-align: left;
	}

	/* Font chữ đẹp hơn */
	body {
		font-family: 'Arial', sans-serif;
	}

	.booking-container {
		display: flex;
		justify-content: center;
		gap: 20px;
		margin-top: 20px;
	}

	.booking-option {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		width: 180px;
		height: 180px;
		background: white;
		border-radius: 20px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
		text-decoration: none;
		color: #333;
		font-size: 16px;
		font-weight: bold;
		transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
	}

		.booking-option img {
			width: 60px;
			height: 60px;
			margin-bottom: 10px;
		}

		.booking-option:hover {
			transform: scale(1.05);
			box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
		}

</style>


<script>
	function refreshArticles() {
		let container = document.getElementById("articleContainer");
		let articles = Array.from(container.getElementsByClassName("article-item"));
		articles.sort(() => Math.random() - 0.5);
		container.innerHTML = "";
		articles.forEach(article => container.appendChild(article));
	}

</script>

