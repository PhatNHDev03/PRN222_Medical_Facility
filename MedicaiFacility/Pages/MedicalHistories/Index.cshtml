@page
@model MedicaiFacility.RazorPage.Pages.MedicalHistories.IndexModel
@{
    Layout = "~/Pages/Shared/_LayoutAdmin.cshtml";
}
<h2>Medical History</h2>

<p class="fw-bold">Total balance: @Model.TotalBalance</p>

<table class="table table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>History ID</th>
            <th>Description</th>
            <th>History Status</th>
            <th>Created At</th>
            <th>Updated At</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Appointment Status</th>
            <th>Patient Info</th>
            <th>Expert Info</th>
            <th>Amount</th>
            <th>Pay</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var history in Model.MedicalHistoryViewModels)
        {
            <tr>
                <td>@history.HistoryId</td>
                <td>@(history.Description ?? "No Description")</td>
                <td>@(history.Status ?? "Unknown")</td>
                <td>@(history.CreatedAt?.ToString("yyyy-MM-dd HH:mm") ?? "N/A")</td>
                <td>@(history.UpdatedAt?.ToString("yyyy-MM-dd HH:mm") ?? "N/A")</td>
                <td>@history.StartDate.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@(history.EndDate?.ToString("yyyy-MM-dd HH:mm") ?? "N/A")</td>
                <td>@(history.AppointmentStatus ?? "N/A")</td>
                <td>@(history.patientInfor ?? "Unknown")</td>
                <td>@(history.ExpertInfor ?? "Unknown")</td>
                <td>@(history.amount)</td>
                <td>@(history.Pay == true ? "Paid" : "Not yet paid")</td>
                <td>
                    <button class="btn btn-primary" onclick="window.location.href='@Url.Page("/MedicalHistories/Detail", new { id = history.HistoryId })'">Detail</button>
                    <button class="btn btn-warning action-btn" onclick="openModalEdit(@history.HistoryId)">Edit</button>
                    @if (history.Pay == false)
                    {
                        <a class="btn btn-primary" asp-page="/MedicalHistories/Index" asp-route-id="@history.HistoryId" asp-page-handler="PayOut">Pay out</a>
                    }
                    <button class="btn btn-danger" onclick="openModalDelete(@history.HistoryId)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Phân trang -->
@if (Model.Pager.TotalPages > 0)
{
    <ul class="pagination justify-content-end">
        @if (Model.Pager.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-page="/MedicalHistories/Index" asp-route-pg="@(Model.Pager.StartPage)">First</a>
            </li>
            <li class="page-item">
                <a class="page-link" asp-page="/MedicalHistories/Index" asp-route-pg="@(Model.Pager.CurrentPage-1)">Previous</a>
            </li>
        }
        @for (var pge = Model.Pager.StartPage; pge <= Model.Pager.EndPage; pge++)
        {
            <li class="page-item @(pge == Model.Pager.CurrentPage ? "active" : "")">
                <a class="page-link" asp-page="/MedicalHistories/Index" asp-route-pg="@pge">@pge</a>
            </li>
        }
        @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-page="/MedicalHistories/Index" asp-route-pg="@(Model.Pager.CurrentPage+1)">Next</a>
            </li>
            <li class="page-item">
                <a class="page-link" asp-page="/MedicalHistories/Index" asp-route-pg="@(Model.Pager.TotalPages)">Last</a>
            </li>
        }
    </ul>
}

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="modal fade" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this record?</p>
                <p>Record ID: <strong id="deleteRecordId"></strong></p>
                <form id="deleteForm" method="post" asp-page-handler="DeleteById">
                    <input type="hidden" name="id" id="deleteInputId" />
                    <button type="submit" class="btn btn-danger">Confirm Delete</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="editModalLabel">Edit Medical History</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalForm">
                <p>Loading...</p> <!-- Nội dung form sẽ được thay thế -->
            </div>
        </div>
    </div>
</div>

<script>
    // Mở modal Delete
    function openModalDelete(recordId) {
        if (recordId) {
            document.getElementById("deleteRecordId").innerText = recordId;
            document.getElementById("deleteInputId").value = recordId;
            let modal = new bootstrap.Modal(document.getElementById("deleteModal"));
            modal.show();
        } else {
            console.error("Invalid Record ID:", recordId);
        }
    }

    // Mở modal Edit
    async function openModalEdit(id) {
        let url = `/MedicalHistories/Edit?id=${id}`;
        try {
            let response = await fetch(url);
            let data = await response.text();
            let modalForm = document.getElementById("modalForm");
            modalForm.innerHTML = data;
            let modal = new bootstrap.Modal(document.getElementById("confirmModal"));
            modal.show();
        } catch (error) {
            console.error("Error loading edit modal:", error);
        }
    }

    // Đóng modal khi click ngoài
    window.onclick = function (event) {
        let deleteModal = document.getElementById("deleteModal");
        let editModal = document.getElementById("confirmModal");
        if (event.target === deleteModal) {
            bootstrap.Modal.getInstance(deleteModal).hide();
        }
        if (event.target === editModal) {
            bootstrap.Modal.getInstance(editModal).hide();
        }
    }
</script>

<style>
    /* Đảm bảo modal có z-index cao hơn các phần tử khác */
    .modal {
        z-index: 1050 !important; /* Giá trị cao để vượt qua các phần tử khác */
    }

    .modal-backdrop {
        z-index: 1040 !important; /* Đặt backdrop thấp hơn modal */
    }

    .modal-content {
        background-color: white;
        padding: 20px;
        border: 1px solid #888;
        box-shadow: 0px 0px 10px 0px #000;
    }
</style>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}